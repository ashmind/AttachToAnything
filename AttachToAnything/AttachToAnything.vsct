<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--  This is the file that defines the actual layout and type of the commands.
        It is divided in different sections (e.g. command definition, command
        placement, ...), with each defining a specific set of properties.
        See the comment before each section for more details about how to
        use it. -->

  <!--  The VSCT compiler (the tool that translates this file into the binary 
        format that VisualStudio will consume) has the ability to run a preprocessor 
        on the vsct file; this preprocessor is (usually) the C++ preprocessor, so 
        it is possible to define includes and macros with the same syntax used 
        in C++ files. Using this ability of the compiler here, we include some files 
        defining some of the constants that we will use inside the file. -->

  <!--This is the file that defines the IDs for all the commands exposed by VisualStudio. -->
  <Extern href="stdidcmd.h" />

  <!--This header contains the command ids for the menus provided by the shell. -->
  <Extern href="vsshlids.h" />

  <!--Definition of some VSCT specific constants. In this sample we use it for the IDs inside the guidOfficeIcon group. -->
  <!--<Extern href="msobtnid.h" xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" />-->

  <!--The Commands section is where we the commands, menus and menu groups are defined.
      This section uses a Guid to identify the package that provides the command defined inside it. -->
  <Commands package="guidAttachToAnythingPackage">
    <!-- Inside this section we have different sub-sections: one for the menus, another  
    for the menu groups, one for the buttons (the actual commands), one for the combos 
    and the last one for the bitmaps used. Each element is identified by a command id that  
    is a unique pair of guid and numeric identifier; the guid part of the identifier is usually  
    called "command set" and is used to group different command inside a logically related  
    group; your package should define its own command set in order to avoid collisions  
    with command ids defined by other packages. -->
    <Menus>
      <Menu guid="guidThisPackageCommands" id="Toolbar" type="Toolbar">
        <CommandFlag>DefaultDocked</CommandFlag>
        <Strings>
          <ButtonText>Attach To Anything</ButtonText>
          <CommandName>Attach To Anything</CommandName>
        </Strings>
      </Menu>

      <Menu guid="guidThisPackageCommands" id="Menu" type="Menu">
        <Parent guid="guidThisPackageCommands" id="ToolbarGroup" />
        <CommandFlag>DefaultDocked</CommandFlag>
        <Strings>
          <ButtonText>Attach To</ButtonText>
          <CommandName>Attach To</CommandName>
        </Strings>
      </Menu>
    </Menus>
    
    <!-- In this section you can define new menu groups. A menu group is a container for 
         other menus or buttons (commands); from a visual point of view you can see the 
         group as the part of a menu contained between two lines. The parent of a group 
         must be a menu. -->
    <Groups>
      <Group guid="guidThisPackageCommands" id="ToolbarGroup" priority="0x0000">
        <Parent guid="guidThisPackageCommands" id="Toolbar" />
      </Group>

      <Group guid="guidThisPackageCommands" id="MenuGroup" priority="0x000">
        <Parent guid="guidThisPackageCommands" id="Menu" />
      </Group>
    </Groups>
    
    <!--Buttons section. -->
    <!--This section defines the elements the user can interact with, like a menu command or a button 
        or combo box in a toolbar. -->
    <Buttons>
      <Button guid="guidThisPackageCommands" id="cmdidAttachToDynamicStub" type="Button">
        <Parent guid="guidThisPackageCommands" id="MenuGroup" />
        <CommandFlag>DynamicItemStart</CommandFlag>
        <CommandFlag>TextOnly</CommandFlag>
        <Strings>
          <ButtonText>Dynamic Stub</ButtonText>
        </Strings>
      </Button>

      <Button guid="guidThisPackageCommands" id="cmdidOptions" type="Button">
        <Parent guid="guidThisPackageCommands" id="ToolbarGroup" />
        <Icon guid="guidThisPackageImages" id="imgOptions" />
        <Strings>
          <ButtonText>Options</ButtonText>
        </Strings>
      </Button>
    </Buttons>

    <Bitmaps>
      <Bitmap guid="guidThisPackageImages" href="Resources\Commands.png" usedList="imgOptions" />
    </Bitmaps>
  </Commands>

  <VisibilityConstraints>
    <VisibilityItem guid="guidThisPackageCommands" id="Toolbar" context="UICONTEXT_NoSolution" />
    <VisibilityItem guid="guidThisPackageCommands" id="Toolbar" context="UICONTEXT_SolutionExists" />
  </VisibilityConstraints>

  <Symbols>
    <!-- This is the package guid. -->
    <GuidSymbol name="guidAttachToAnythingPackage" value="{ef909810-3edb-49c8-81a1-1f05310780c7}" />
    
    <!-- This is the guid used to group the menu commands together -->
    <GuidSymbol name="guidThisPackageCommands" value="{65ba0228-4ea4-439d-ad77-8279243d8371}">
      <IDSymbol name="Toolbar" value="0x1000" />
      <IDSymbol name="ToolbarGroup" value="0x1050" />

      <IDSymbol name="Menu" value="0x1300" />
      <IDSymbol name="MenuGroup" value="0x1400" />
      <IDSymbol name="cmdidAttachToDynamicStub" value="0x1600" />
      <IDSymbol name="cmdidOptions" value="0x1700" />
    </GuidSymbol>

    <GuidSymbol name="guidThisPackageImages" value="{65ba0228-4ea4-439d-ad77-8279243d8371}">
      <IDSymbol name="imgOptions" value="1" />
    </GuidSymbol>
  </Symbols>
</CommandTable>
